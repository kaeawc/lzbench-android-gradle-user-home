name: Compression Benchmark

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  benchmark:
    runs-on: ubuntu-latest  # Use Linux runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential git cmake tar gzip zstd lz4
          which gzip || echo "Gzip not found!"

      - name: Cache lzbench Build
        id: cache-lzbench
        uses: actions/cache@v4
        with:
          path: ~/.cache/lzbench
          key: lzbench-${{ runner.os }}-${{ hashFiles('~/.cache/lzbench/.git/refs/heads/master') }}

      - name: Build lzbench (if not cached)
        if: steps.cache-lzbench.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.cache/lzbench
          git clone https://github.com/inikep/lzbench.git ~/.cache/lzbench
          cd ~/.cache/lzbench
          make -j$(nproc)

      - name: Run Benchmarks
        run: |
          mkdir -p results
          
          # Create a test file (100MB of random data)
          dd if=/dev/urandom of=testfile bs=1M count=1000

          echo "Running benchmarks on compression tools..."

          # Run lz4 ST
          ~/.cache/lzbench/lzbench \
            -ezstd_fast,1,st \
            -i10,20 testfile | tee results/lzbench_zstd_st_results.txt

          # Run lz4 MT
          ~/.cache/lzbench/lzbench \
            -ezstd_fast,1,mt \
            -i10,20 testfile | tee results/lzbench_zstd_mt_results.txt

          # Run lz4 ST
          ~/.cache/lzbench/lzbench \
            -elz4fast,1,st \
            -i10,20 testfile | tee results/lzbench_lz4_st_results.txt

          # Run lz4 MT
          ~/.cache/lzbench/lzbench \
            -elz4fast,1,mt \
            -i10,20 testfile | tee results/lzbench_lz4_mt_results.txt

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: lzbench-results
          path: |
            results/lzbench*
